apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: memcached
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.14.0
    helm.sh/chart: mimir-distributed-5.5.1
  name: mimir-chunks-cache
  namespace: syn-mimir
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: chunks-cache
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  serviceName: mimir-chunks-cache
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
      labels:
        app.kubernetes.io/component: chunks-cache
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.14.0
        helm.sh/chart: mimir-distributed-5.5.1
    spec:
      containers:
        - args:
            - -m 8192
            - --extended=modern,track_sizes
            - -I 1m
            - -c 16384
            - -v
            - -u 11211
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: memcached:1.6.31-alpine
          imagePullPolicy: IfNotPresent
          name: memcached
          ports:
            - containerPort: 11211
              name: client
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 4Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts: null
        - args:
            - --memcached.address=localhost:11211
            - --web.listen-address=0.0.0.0:9150
          image: prom/memcached-exporter:v0.14.4
          imagePullPolicy: IfNotPresent
          name: exporter
          ports:
            - containerPort: 9150
              name: http-metrics
          resources:
            limits: {}
            requests: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 30
      volumes: null
  updateStrategy:
    type: RollingUpdate
