apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: distributor
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: mimir-distributed-3.3.0
  name: mimir-distributor
  namespace: syn-mimir
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: 2fbc90000cca83d5fe3912b30315ca117823a5ee445822698cda04e89d1fed19
      labels:
        app.kubernetes.io/component: distributor
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.4.0
        helm.sh/chart: mimir-distributed-3.3.0
      namespace: syn-mimir
    spec:
      affinity: {}
      containers:
        - args:
            - -target=distributor
            - -config.expand-env=true
            - -config.file=/etc/mimir/mimir.yaml
          env: null
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: grafana/mimir:2.4.0
          imagePullPolicy: IfNotPresent
          livenessProbe: null
          name: distributor
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/mimir
              name: config
            - mountPath: /var/mimir
              name: runtime-config
            - mountPath: /data
              name: storage
              subPath: null
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: distributor
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - configMap:
            items:
              - key: mimir.yaml
                path: mimir.yaml
            name: mimir-config
          name: config
        - configMap:
            name: mimir-runtime
          name: runtime-config
        - emptyDir: {}
          name: storage
