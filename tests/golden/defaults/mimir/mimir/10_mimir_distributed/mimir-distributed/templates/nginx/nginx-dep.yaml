apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.2.0
    helm.sh/chart: mimir-distributed-3.0.0
  name: mimir-nginx
  namespace: syn-mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nginx
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: 51379e831496cb18465aff6c0abbece0338db8651d5d7bbbf9343b5c47243b97
      labels:
        app.kubernetes.io/component: nginx
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.2.0
        helm.sh/chart: mimir-distributed-3.0.0
      namespace: syn-mimir
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - nginx
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
      containers:
        - env: null
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: docker.io/nginxinc/nginx-unprivileged:1.19-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 8080
              name: http-metric
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http-metric
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/nginx
              name: config
            - mountPath: /tmp
              name: tmp
            - mountPath: /docker-entrypoint.d
              name: docker-entrypoint-d-override
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: mimir-nginx
          name: config
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: docker-entrypoint-d-override
