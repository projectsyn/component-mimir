apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: querier
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.2.0
    helm.sh/chart: mimir-distributed-3.0.0
  name: mimir-querier
  namespace: syn-mimir
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: a65fac97c71478d5409c613eb7acbb01d8d935072ad49df2a2682ca49d7a962a
      labels:
        app.kubernetes.io/component: querier
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.2.0
        helm.sh/chart: mimir-distributed-3.0.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: target
                      operator: In
                      values:
                        - querier
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - -target=querier
            - -config.expand-env=true
            - -config.file=/etc/mimir/mimir.yaml
          env: null
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: grafana/mimir:2.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe: null
          name: querier
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/mimir
              name: config
            - mountPath: /var/mimir
              name: runtime-config
            - mountPath: /data
              name: storage
              subPath: null
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 180
      tolerations: []
      volumes:
        - configMap:
            items:
              - key: mimir.yaml
                path: mimir.yaml
            name: mimir-config
          name: config
        - configMap:
            name: mimir-runtime
          name: runtime-config
        - emptyDir: {}
          name: storage
