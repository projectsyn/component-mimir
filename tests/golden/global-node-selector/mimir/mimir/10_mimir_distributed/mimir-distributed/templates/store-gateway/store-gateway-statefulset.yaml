apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    rollout-max-unavailable: '10'
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.7.1
    helm.sh/chart: mimir-distributed-4.3.0
    name: store-gateway-zone-a
    rollout-group: store-gateway
    zone: zone-a
  name: mimir-store-gateway-zone-a
  namespace: syn-mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: store-gateway
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
      rollout-group: store-gateway
      zone: zone-a
  serviceName: mimir-store-gateway-headless
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: 6c6481e85996c18964e926efa4714f8a0730c55921d824719ba3f616ce18dc35
      labels:
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.7.1
        helm.sh/chart: mimir-distributed-4.3.0
        name: store-gateway-zone-a
        rollout-group: store-gateway
        zone: zone-a
      namespace: syn-mimir
    spec:
      affinity: {}
      containers:
        - args:
            - -target=store-gateway
            - -config.expand-env=true
            - -config.file=/etc/mimir/mimir.yaml
            - -store-gateway.sharding-ring.instance-availability-zone=zone-a
          env: null
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: grafana/mimir:2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe: null
          name: store-gateway
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            limits:
              memory: 2.1Gi
            requests:
              cpu: 1
              memory: 1.5Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/mimir
              name: config
            - mountPath: /var/mimir
              name: runtime-config
            - mountPath: /data
              name: storage
            - mountPath: /active-query-tracker
              name: active-queries
      initContainers: []
      nodeSelector:
        appuio.io/node-class: plus
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 240
      tolerations: []
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: store-gateway
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - configMap:
            items:
              - key: mimir.yaml
                path: mimir.yaml
            name: mimir-config
          name: config
        - configMap:
            name: mimir-runtime
          name: runtime-config
        - emptyDir: {}
          name: active-queries
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    rollout-max-unavailable: '10'
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.7.1
    helm.sh/chart: mimir-distributed-4.3.0
    name: store-gateway-zone-b
    rollout-group: store-gateway
    zone: zone-b
  name: mimir-store-gateway-zone-b
  namespace: syn-mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: store-gateway
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
      rollout-group: store-gateway
      zone: zone-b
  serviceName: mimir-store-gateway-headless
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: 6c6481e85996c18964e926efa4714f8a0730c55921d824719ba3f616ce18dc35
      labels:
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.7.1
        helm.sh/chart: mimir-distributed-4.3.0
        name: store-gateway-zone-b
        rollout-group: store-gateway
        zone: zone-b
      namespace: syn-mimir
    spec:
      affinity: {}
      containers:
        - args:
            - -target=store-gateway
            - -config.expand-env=true
            - -config.file=/etc/mimir/mimir.yaml
            - -store-gateway.sharding-ring.instance-availability-zone=zone-b
          env: null
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: grafana/mimir:2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe: null
          name: store-gateway
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            limits:
              memory: 2.1Gi
            requests:
              cpu: 1
              memory: 1.5Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/mimir
              name: config
            - mountPath: /var/mimir
              name: runtime-config
            - mountPath: /data
              name: storage
            - mountPath: /active-query-tracker
              name: active-queries
      initContainers: []
      nodeSelector:
        appuio.io/node-class: plus
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 240
      tolerations: []
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: store-gateway
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - configMap:
            items:
              - key: mimir.yaml
                path: mimir.yaml
            name: mimir-config
          name: config
        - configMap:
            name: mimir-runtime
          name: runtime-config
        - emptyDir: {}
          name: active-queries
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    rollout-max-unavailable: '10'
  labels:
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: 2.7.1
    helm.sh/chart: mimir-distributed-4.3.0
    name: store-gateway-zone-c
    rollout-group: store-gateway
    zone: zone-c
  name: mimir-store-gateway-zone-c
  namespace: syn-mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: store-gateway
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
      rollout-group: store-gateway
      zone: zone-c
  serviceName: mimir-store-gateway-headless
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: 6c6481e85996c18964e926efa4714f8a0730c55921d824719ba3f616ce18dc35
      labels:
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/version: 2.7.1
        helm.sh/chart: mimir-distributed-4.3.0
        name: store-gateway-zone-c
        rollout-group: store-gateway
        zone: zone-c
      namespace: syn-mimir
    spec:
      affinity: {}
      containers:
        - args:
            - -target=store-gateway
            - -config.expand-env=true
            - -config.file=/etc/mimir/mimir.yaml
            - -store-gateway.sharding-ring.instance-availability-zone=zone-c
          env: null
          envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: grafana/mimir:2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe: null
          name: store-gateway
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: memberlist
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            limits:
              memory: 2.1Gi
            requests:
              cpu: 1
              memory: 1.5Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/mimir
              name: config
            - mountPath: /var/mimir
              name: runtime-config
            - mountPath: /data
              name: storage
            - mountPath: /active-query-tracker
              name: active-queries
      initContainers: []
      nodeSelector:
        appuio.io/node-class: plus
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 240
      tolerations: []
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: store-gateway
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - configMap:
            items:
              - key: mimir.yaml
                path: mimir.yaml
            name: mimir-config
          name: config
        - configMap:
            name: mimir-runtime
          name: runtime-config
        - emptyDir: {}
          name: active-queries
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
