apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: mimir
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mimir
    app.kubernetes.io/version: 2.14.0
    helm.sh/chart: mimir-distributed-5.5.1
  name: mimir-nginx
  namespace: syn-mimir
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nginx
      app.kubernetes.io/instance: mimir
      app.kubernetes.io/name: mimir
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        bucketSecretVersion: '0'
        checksum/config: 71a30ca5cca3d5644c7565b1d3ed280673635b45f53ca041cfbcfa5f9022570d
      labels:
        app.kubernetes.io/component: nginx
        app.kubernetes.io/instance: mimir
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mimir
        app.kubernetes.io/version: 2.14.0
        helm.sh/chart: mimir-distributed-5.5.1
      namespace: syn-mimir
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: mimir-bucket-secret
          image: docker.io/nginxinc/nginx-unprivileged:1.27-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 8080
              name: http-metric
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http-metric
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp
            - mountPath: /docker-entrypoint.d
              name: docker-entrypoint-d-override
      nodeSelector:
        appuio.io/node-class: plus
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: nginx
              app.kubernetes.io/instance: mimir
              app.kubernetes.io/name: mimir
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - configMap:
            name: mimir-nginx
          name: config
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: docker-entrypoint-d-override
